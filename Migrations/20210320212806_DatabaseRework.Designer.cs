// <auto-generated />
using System;
using DiscGolf.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiscGolf.Migrations
{
    [DbContext(typeof(DiscGolfContext))]
    [Migration("20210320212806_DatabaseRework")]
    partial class DatabaseRework
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiscGolf.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            CourseName = "Capitol Technology University"
                        });
                });

            modelBuilder.Entity("DiscGolf.Models.GamePlayed", b =>
                {
                    b.Property<int>("GamePlayedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("GamePlayedID");

                    b.HasIndex("CourseID");

                    b.HasIndex("PlayerID");

                    b.ToTable("GamesPlayed");

                    b.HasData(
                        new
                        {
                            GamePlayedID = 1,
                            CourseID = 1,
                            PlayerID = 1,
                            Score = 26
                        },
                        new
                        {
                            GamePlayedID = 2,
                            CourseID = 1,
                            PlayerID = 1,
                            Score = 31
                        },
                        new
                        {
                            GamePlayedID = 3,
                            CourseID = 1,
                            PlayerID = 2,
                            Score = 29
                        });
                });

            modelBuilder.Entity("DiscGolf.Models.Hole", b =>
                {
                    b.Property<int>("HoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<double?>("Distance")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int?>("Par")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SequenceNumber")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("HoleID");

                    b.HasIndex("CourseID");

                    b.ToTable("Holes");

                    b.HasData(
                        new
                        {
                            HoleID = 1,
                            CourseID = 1,
                            Distance = 317.01999999999998,
                            Par = 3,
                            SequenceNumber = 1
                        },
                        new
                        {
                            HoleID = 2,
                            CourseID = 1,
                            Distance = 305.48000000000002,
                            Par = 3,
                            SequenceNumber = 2
                        },
                        new
                        {
                            HoleID = 3,
                            CourseID = 1,
                            Distance = 297.37,
                            Par = 3,
                            SequenceNumber = 3
                        },
                        new
                        {
                            HoleID = 4,
                            CourseID = 1,
                            Distance = 188.97,
                            Par = 3,
                            SequenceNumber = 4
                        },
                        new
                        {
                            HoleID = 5,
                            CourseID = 1,
                            Distance = 253.03999999999999,
                            Par = 2,
                            SequenceNumber = 5
                        },
                        new
                        {
                            HoleID = 6,
                            CourseID = 1,
                            Distance = 360.47000000000003,
                            Par = 6,
                            SequenceNumber = 6
                        },
                        new
                        {
                            HoleID = 7,
                            CourseID = 1,
                            Distance = 172.59,
                            Par = 3,
                            SequenceNumber = 7
                        },
                        new
                        {
                            HoleID = 8,
                            CourseID = 1,
                            Distance = 348.94,
                            Par = 4,
                            SequenceNumber = 8
                        },
                        new
                        {
                            HoleID = 9,
                            CourseID = 1,
                            Distance = 186.06,
                            Par = 3,
                            SequenceNumber = 9
                        });
                });

            modelBuilder.Entity("DiscGolf.Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerID");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerID = 1,
                            Name = "Thomas Mahr",
                            Password = "password",
                            Username = "ThomasMahr"
                        },
                        new
                        {
                            PlayerID = 2,
                            Name = "Alyssa Ader",
                            Password = "Engineering",
                            Username = "AAder"
                        });
                });

            modelBuilder.Entity("DiscGolf.Models.GamePlayed", b =>
                {
                    b.HasOne("DiscGolf.Models.Course", "Course")
                        .WithMany("GamesPlayed")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiscGolf.Models.Player", "Player")
                        .WithMany("GamesPlayed")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("DiscGolf.Models.Hole", b =>
                {
                    b.HasOne("DiscGolf.Models.Course", "Course")
                        .WithMany("Holes")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("DiscGolf.Models.Course", b =>
                {
                    b.Navigation("GamesPlayed");

                    b.Navigation("Holes");
                });

            modelBuilder.Entity("DiscGolf.Models.Player", b =>
                {
                    b.Navigation("GamesPlayed");
                });
#pragma warning restore 612, 618
        }
    }
}
